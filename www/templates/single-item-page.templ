package templates

import "github.com/nasermirzaei89/ketabdoozak/listing"
import "github.com/nasermirzaei89/ketabdoozak/www/templates/icons"
import "github.com/nasermirzaei89/ketabdoozak/www/templates/components"
import . "github.com/nasermirzaei89/ketabdoozak/www/templates/utils"
import "slices"

templ SingleItemPage(item *listing.Item) {
	<main>
		<div class="container mx-auto py-4">
			<article class="flex flex-col sm:flex-row gap-4">
				<div class="self-stretch sm:max-w-80 flex flex-col gap-4 px-2 sm:px-0">
					<img src={ item.ThumbnailURL } class="rounded-sm aspect-square w-full bg-gray-500" alt=""/>
					if item.Lent {
						<p>در حال حاضر این کتاب به امانت برده شده است.</p>
					}
				</div>
				<div class="self-stretch flex flex-col gap-4 px-2 sm:px-0">
					if IsCurrentUser(ctx, item.OwnerID) {
						<div class="inline-flex items-center gap-1 text-base text-gray-900">
							@icons.MdiFileEye(6)
							@ItemStatusText(item.Status)
						</div>
						<div class="flex flex-row gap-2">
							@OwnerItemActions(item)
						</div>
					}
					<h1 class="as-h1 text-gray-900">
						{ item.Title }
					</h1>
					<div class="inline-flex items-center gap-1 text-base text-gray-900">
						@icons.MdiAccount(6)
						{ item.OwnerName }
					</div>
					<div class="inline-flex items-center gap-1 text-base text-gray-900">
						@icons.MdiMapMarker(6)
						{ item.LocationTitle }
					</div>
					<div class="flex gap-1">
						for i:= range item.Types {
							@components.BookTypeBadge(item.Types[i])
						}
					</div>
					<div>
						<button
							class="as-button variant-filled is-primary size-md"
							hx-get={ string(GetItemContactInfoURL(ctx, item.ID)) }
							hx-target="body"
							hx-swap="beforeend"
						>
							@icons.MdiPhone(6)
							دریافت اطلاعات تماس
						</button>
					</div>
					<div>
						@templ.Raw(string(item.Description))
					</div>
				</div>
			</article>
		</div>
	</main>
}

templ OwnerItemActions(item *listing.Item) {
	<a class="as-button variant-outlined size-md" href={ GetEditItemURL(ctx, item.ID) }>
		@icons.MdiPencil(6)
		ویرایش
	</a>
	if slices.Contains([]listing.ItemStatus{listing.ItemStatusDraft}, item.Status) {
		<button
			class="as-button variant-filled is-primary size-md"
			hx-post={ string(GetItemSendForPublishURL(ctx, item.ID)) }
			hx-confirm="آیا می‌خواهید این کتاب را برای بررسی و انتشار ارسال نمائید؟"
			hx-target="main"
		>
			@icons.MdiSend(6)
			ارسال برای انتشار
		</button>
	}
	if slices.Contains([]listing.ItemStatus{listing.ItemStatusExpired, listing.ItemStatusArchived}, item.Status) {
		<button
			class="as-button variant-outlined size-md"
			hx-post={ string(GetItemPublishURL(ctx, item.ID)) }
			hx-confirm="آیا می‌خواهید این کتاب را مجددا منتشر کنید؟"
			hx-target="main"
		>
			@icons.MdiPublish(6)
			انتشار
		</button>
	}
	if slices.Contains([]listing.ItemStatus{listing.ItemStatusExpired, listing.ItemStatusPublished}, item.Status) {
		<button
			class="as-button variant-outlined size-md"
			hx-post={ string(GetItemArchiveURL(ctx, item.ID)) }
			hx-confirm="آیا می‌خواهید این کتاب را آرشیو کنید؟"
			hx-target="main"
		>
			@icons.MdiArchive(6)
			آرشیو
		</button>
	}
	if slices.Contains([]listing.ItemStatus{listing.ItemStatusDraft, listing.ItemStatusArchived}, item.Status) {
		<button
			class="as-button variant-outlined is-danger size-md"
			hx-delete={ string(GetItemURL(ctx, item.ID)) }
			hx-confirm="آیا از پاک کردن این کتاب مطمئنید؟"
		>
			@icons.MdiDelete(6)
			حذف
		</button>
	}
}

templ ItemStatusText(status listing.ItemStatus) {
	switch (status) {
		case listing.ItemStatusDraft:
			<span>پیش‌نویس</span>
		case listing.ItemStatusPendingReview:
			<span>منتظر بررسی</span>
		case listing.ItemStatusPublished:
			<span>منتشر شده</span>
		case listing.ItemStatusRejected:
			<span>رد شده</span>
		case listing.ItemStatusExpired:
			<span>منقضی شده</span>
		case listing.ItemStatusArchived:
			<span>آرشیو شده</span>
		case listing.ItemStatusDeleted:
			<span>حذف شده</span>
		default:
			<span>{ string(status) }</span>
	}
}
